// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
const fs = require('fs');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è...');

let content = fs.readFileSync('server.js', 'utf8');

// 1. –£–±–∏—Ä–∞–µ–º –±—ã—Å—Ç—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã –∏–∑ –æ–±—ã—á–Ω–æ–≥–æ API (—Å—Ç—Ä–æ–∫–∏ 839-868)
const quickTaskPattern = /\/\/ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –¥–∞—Ç—å –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç\s*const quickTask = analyzeQuickTask\(message\);[\s\S]*?return res\.json\([\s\S]*?\}\);[\s\S]*?\}/;

content = content.replace(quickTaskPattern, `// –£–ë–ò–†–ê–ï–ú –ë–´–°–¢–†–´–ï –®–ê–ë–õ–û–ù–´ - –í–°–ï–ì–î–ê –°–ß–ò–¢–ê–ï–ú –ü–û –†–ï–ê–õ–¨–ù–´–ú –†–ê–°–¶–ï–ù–ö–ê–ú
        // –¢–µ–ø–µ—Ä—å –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø–æ PRICING_SYSTEM`);

// 2. –£–±–∏—Ä–∞–µ–º –±—ã—Å—Ç—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ API (—Å—Ç—Ä–æ–∫–∏ 1590-1609)
const voiceQuickTaskPattern = /\/\/ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –¥–∞—Ç—å –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç\s*const quickTask = analyzeQuickTask\(transcription\);[\s\S]*?return res\.json\([\s\S]*?\}\);[\s\S]*?\}/;

const voiceReplacement = `// –£–ë–ò–†–ê–ï–ú –ë–´–°–¢–†–´–ï –®–ê–ë–õ–û–ù–´ –î–õ–Ø –ì–û–õ–û–°–ê - –í–°–ï–ì–î–ê –°–ß–ò–¢–ê–ï–ú –ü–û –†–ï–ê–õ–¨–ù–´–ú –†–ê–°–¶–ï–ù–ö–ê–ú
        // –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –æ–ø–∏—Å—ã–≤–∞–µ—Ç –±–∏–∑–Ω–µ—Å - —Å—Ä–∞–∑—É –¥–µ–ª–∞–µ–º —Ä–∞—Å—á–µ—Ç
        const businessKeywords = /–º–∞–≥–∞–∑–∏–Ω|–º–æ–Ω—Ç–∞–∂|—Å–µ—Ä–≤–∏—Å|—Å–∞–ª–æ–Ω|–¥–æ—Å—Ç–∞–≤–∫|–∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å|—à–∏–Ω–æ–º–æ–Ω—Ç–∞–∂|—Ü–≤–µ—Ç–æ—á–Ω|–∫–∞—Ñ–µ|—Ä–µ—Å—Ç–æ—Ä–∞–Ω|—Ç–∞–∫—Å–∏|–∫–ª–∏–Ω–∏–∫|—à–∫–æ–ª|–∫—É—Ä—Å/i;
        
        if (businessKeywords.test(transcription) || parsedConversation.length >= 1) {
            console.log('üí∞ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ PRICING_SYSTEM...');
            
            try {
                const allMessages = [...parsedConversation, { role: 'user', content: transcription }];
                const fullText = allMessages.map(m => m.content).join(' ');
                
                const estimate = await calculateProjectEstimate(fullText, parsedConversation);
                
                await sendEstimateToTelegram(estimate, sessionId);
                
                if (sessionId && Conversation) {
                    await Conversation.findOneAndUpdate(
                        { sessionId },
                        { 
                            estimate: estimate,
                            estimatedAt: new Date()
                        }
                    );
                }
                
                console.log('‚úÖ –°–º–µ—Ç–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –ø–æ —Ä–µ–∞–ª—å–Ω—ã–º —Ä–∞—Å—Ü–µ–Ω–∫–∞–º:', estimate.totalCost, '—Ä—É–±.');
                
                return res.json({
                    success: true,
                    transcription: transcription,
                    message: formatEstimateMessage(estimate),
                    estimate: estimate,
                    isVoiceInput: true,
                    quickReplies: [
                        'üìû –û–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏',
                        '‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏', 
                        '‚úÖ –£—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–º–µ—Ç—É',
                        'üìÑ –ü–æ–ª—É—á–∏—Ç—å –≤ PDF'
                    ]
                });
                
            } catch (estimateError) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ —Å–º–µ—Ç—ã:', estimateError.message);
            }
        }`;

content = content.replace(voiceQuickTaskPattern, voiceReplacement);

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
fs.writeFileSync('server.js', content);

console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!');
console.log('üìã –ß—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ:');
console.log('  1. –£–±—Ä–∞–Ω—ã –±—ã—Å—Ç—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã –∏–∑ –æ–±—ã—á–Ω–æ–≥–æ API');
console.log('  2. –£–±—Ä–∞–Ω—ã –±—ã—Å—Ç—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ API');
console.log('  3. –î–æ–±–∞–≤–ª–µ–Ω —Ä–∞—Å—á–µ—Ç –ø–æ PRICING_SYSTEM –¥–ª—è –≥–æ–ª–æ—Å–∞');
console.log('');
console.log('üéØ –¢–µ–ø–µ—Ä—å –±–æ—Ç –±—É–¥–µ—Ç:');
console.log('  ‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞');
console.log('  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏ (3000‚ÇΩ/—á–∞—Å)');
console.log('  ‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º');
console.log('  ‚Ä¢ –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≥–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –∑–∞ 35,000‚ÇΩ'); 