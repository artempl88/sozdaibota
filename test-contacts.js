// –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –ø–æ–ª–µ–π
const axios = require('axios');

const API_BASE = 'http://localhost:3001/api';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏ —Å–≤—è–∑–∏
const testFormData = {
    name: '–¢–µ—Å—Ç –ö–æ–Ω—Ç–∞–∫—Ç–æ–≤',
    position: '–î–∏—Ä–µ–∫—Ç–æ—Ä',
    industry: 'E-commerce / –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω',
    budget: '50 000 - 100 000‚ÇΩ',
    preferredChannels: ['Telegram', 'Email', 'WhatsApp'],
    timeline: '—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ (2-3 –Ω–µ–¥–µ–ª–∏)',
    fingerprint: 'test_contacts_' + Date.now(),
    // –ù–æ–≤—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
    contacts: {
        'Telegram': '@test_user',
        'Email': 'test@example.com',
        'WhatsApp': '+7-999-123-45-67'
    },
    // –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    contactInfo: 'Telegram: @test_user, Email: test@example.com, WhatsApp: +7-999-123-45-67'
};

async function runContactsTest() {
    console.log('üìû –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤...\n');

    try {
        // 1. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
        console.log('1Ô∏è‚É£ –°–æ–∑–¥–∞—ë–º —Å–µ—Å—Å–∏—é —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏...');
        const formResponse = await axios.post(`${API_BASE}/pre-chat-form`, testFormData);
        
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', {
            success: formResponse.data.success,
            sessionId: formResponse.data.sessionId ? '–°–æ–∑–¥–∞–Ω' : '–ù–µ —Å–æ–∑–¥–∞–Ω',
            hasWelcomeMessage: !!formResponse.data.welcomeMessage
        });

        if (!formResponse.data.success) {
            console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏:', formResponse.data.error);
            return;
        }

        const sessionId = formResponse.data.sessionId;
        console.log('‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏');

        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å
        console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤...');
        const historyResponse = await axios.get(`${API_BASE}/pre-chat-history/${sessionId}`);
        
        if (historyResponse.data.success) {
            const savedFormData = historyResponse.data.formData;
            console.log('–°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã:', {
                contactInfo: savedFormData.contactInfo,
                contacts: savedFormData.contacts,
                preferredChannels: savedFormData.preferredChannels
            });
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
            if (savedFormData.contacts) {
                const channelsCount = Object.keys(savedFormData.contacts).length;
                console.log(`‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${channelsCount} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤`);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∫–∞–Ω–∞–ª
                for (const [channel, contact] of Object.entries(testFormData.contacts)) {
                    if (savedFormData.contacts[channel] === contact) {
                        console.log(`‚úÖ ${channel}: ${contact}`);
                    } else {
                        console.log(`‚ùå ${channel}: –æ–∂–∏–¥–∞–ª–æ—Å—å "${contact}", –ø–æ–ª—É—á–µ–Ω–æ "${savedFormData.contacts[channel]}"`);
                    }
                }
            } else {
                console.log('‚ö†Ô∏è –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, —Ç–æ–ª—å–∫–æ contactInfo');
            }
        }

        // 3. –¢–µ—Å—Ç —Å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
        console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é - –Ω–µ–ø–æ–ª–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã...');
        const incompleteData = {
            ...testFormData,
            preferredChannels: ['Telegram', 'Email'],
            contacts: {
                'Telegram': '@test_user'
                // Email –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
            },
            contactInfo: 'Telegram: @test_user', // –ù–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            fingerprint: 'test_incomplete_' + Date.now()
        };

        try {
            const incompleteResponse = await axios.post(`${API_BASE}/pre-chat-form`, incompleteData);
            
            if (!incompleteResponse.data.success) {
                console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç - –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ —Ñ–æ—Ä–º–∞ —Å –Ω–µ–ø–æ–ª–Ω—ã–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏');
                console.log('–û—à–∏–±–∫–∞:', incompleteResponse.data.error);
            } else {
                console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - —Ñ–æ—Ä–º–∞ —Å –Ω–µ–ø–æ–ª–Ω—ã–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –ø—Ä–∏–Ω—è—Ç–∞');
            }
        } catch (error) {
            console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç - —Å–µ—Ä–≤–µ—Ä –æ—Ç–∫–ª–æ–Ω–∏–ª –Ω–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        }

        // 4. –¢–µ—Å—Ç —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º email
        console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é email...');
        const invalidEmailData = {
            ...testFormData,
            preferredChannels: ['Email'],
            contacts: {
                'Email': 'invalid-email'
            },
            contactInfo: 'Email: invalid-email',
            fingerprint: 'test_invalid_email_' + Date.now()
        };

        try {
            const invalidEmailResponse = await axios.post(`${API_BASE}/pre-chat-form`, invalidEmailData);
            
            if (!invalidEmailResponse.data.success) {
                console.log('‚úÖ Email –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç');
                console.log('–û—à–∏–±–∫–∞:', invalidEmailResponse.data.error);
            } else {
                console.log('‚ùå Email –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
            }
        } catch (error) {
            console.log('‚úÖ Email –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç - —Å–µ—Ä–≤–µ—Ä –æ—Ç–∫–ª–æ–Ω–∏–ª –Ω–µ–≤–µ—Ä–Ω—ã–π email');
        }

        // 5. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–æ–∑–¥–∞–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
        console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–µ—Å—Å–∏—é...');
        const messageResponse = await axios.post(`${API_BASE}/pre-chat-message`, {
            sessionId: sessionId,
            message: '–ü—Ä–∏–≤–µ—Ç! –ú–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π —á–µ—Ä–µ–∑ –ª—é–±–æ–π –∏–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.'
        });

        if (messageResponse.data.success) {
            console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
            console.log('GPT –æ—Ç–≤–µ—Ç (–ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤):', 
                messageResponse.data.message.substring(0, 100) + '...');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', messageResponse.data.error);
        }

        console.log('\nüéâ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∑–∞–≤–µ—Ä—à—ë–Ω!');
        console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
        console.log('‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è');
        console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç');
        console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ–ø–æ–ª–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤');
        console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è email —Ñ–æ—Ä–º–∞—Ç–∞');
        console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —á–∞—Ç–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
        if (error.response) {
            console.error('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
        }
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
    runContactsTest();
}

module.exports = { runContactsTest }; 